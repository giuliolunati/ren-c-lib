" Vim syntax file
" Language:  Rebol
" Maintainer:  Mike Williams <mrw@eandem.co.uk>
" Filenames:  *.r
" Last Change:  27th June 2002
" URL:    http://www.eandem.co.uk/mrw/vim

" Changes-by: Barry Walsh <draegtun@gmail.com>
" Last updated: 17-May-2013

" For version 5.x: Clear all syntax items
" For version 6.x: Quit when a syntax file was already loaded
if version < 600
  syntax clear
elseif exists("b:current_syntax")
  finish
endif

" Ren-C ISN'T case insensitive
" syn case ignore

" Delimiters
syn match       rebolDelimiter  "[][(/|)@:'.]"

" As per current users documentation
if version < 600
  set isk=@,48-57,?,!,+,-,*,&,\|,=,_,~
else
  setlocal isk=@,48-57,\<,\>,?,!,+,-,*,&,\|,=,_,~
endif

" Words
syn match       rebolWord       "\k"
syn match       rebolWord       "\k\(\k\|[':]\)*\k"

" Yer TODO highlighter
syn keyword  rebolTodo  contained TODO

" Comments
syn match       rebolComment    ";.*$" contains=rebolTodo

" Values
" Integers
syn match       rebolInteger    "\<[+-]\=\d\+\('\d*\)*\>"
" Decimals
syn match       rebolDecimal    "[+-]\=\(\d\+\('\d*\)*\)\=[,.]\d*\(e[+-]\=\d\+\)\="
syn match       rebolDecimal    "[+-]\=\d\+\('\d*\)*\(e[+-]\=\d\+\)\="
" Time
syn match       rebolTime       "[+-]\=\(\d\+\('\d*\)*\:\)\{1,2}\d\+\('\d*\)*\([.,]\d\+\)\=\([AP]M\)\=\>"
syn match       rebolTime       "[+-]\=:\d\+\([.,]\d*\)\=\([AP]M\)\=\>"
" Dates
" DD-MMM-YY & YYYY format
syn match       rebolDate       "\d\{1,2}\([/-]\)\(Jan\|Feb\|Mar\|Apr\|May\|Jun\|Jul\|Aug\|Sep\|Oct\|Nov\|Dec\)\1\(\d\{2}\)\{1,2}\>"
" DD-month-YY & YYYY format
syn match       rebolDate       "\d\{1,2}\([/-]\)\(January\|February\|March\|April\|May\|June\|July\|August\|September\|October\|November\|December\)\1\(\d\{2}\)\{1,2}\>"
" DD-MM-YY & YY format
syn match       rebolDate       "\d\{1,2}\([/-]\)\d\{1,2}\1\(\d\{2}\)\{1,2}\>"
" YYYY-MM-YY format
syn match       rebolDate       "\d\{4}-\d\{1,2}-\d\{1,2}\>"
" DD.MM.YYYY format
syn match       rebolDate       "\d\{1,2}\.\d\{1,2}\.\d\{4}\>"
" Money
syn match       rebolMoney      "\a*\$\d\+\('\d*\)*\([,.]\d\+\)\="
" Strings
syn region      rebolString1     oneline start=+"+ skip=+\^"+ end=+"+ contains=rebolSpecialCharacter
syn region      rebolString2     start=+{+ end=+}+ skip=+\^}+ contains=rebolSpecialCharacter,rebolString2
" Binary
syn region      rebolBinary     start=+\d*#{+ end=+}+ contains=rebolComment
" Email
syn match       rebolEmail      "\<\k\+@\(\k\+\.\)*\k\+\>"
" File
syn match       rebolFile       "%/\=\(\f\+/\)*\f\+[/]\=" contains=rebolSpecialCharacter
syn region      rebolFile       oneline start=+%"+ end=+"+ contains=rebolSpecialCharacter
" URLs
syn match       rebolURL        "http://\k\+\(\.\k\+\)*\(:\d\+\)\=\(/\(\k\+/\)*\(\k\+\)\=\)*"
syn match       rebolURL        "file://\k\+\(\.\k\+\)*/\(\k\+/\)*\k\+"
syn match       rebolURL        "ftp://\(\k\+:\k\+@\)\=\k\+\(\.\k\+\)*\(:\d\+\)\=/\(\k\+/\)*\k\+"
syn match       rebolURL        "mailto:\k\+\(\.\k\+\)*@\k\+\(\.\k\+\)*"
" Issues
syn match       rebolIssue      "#\(\d\+-\)*\d\+"
" Tuples
syn match       rebolTuple      "\(\d\+\.\)\{2,}"
" Characters
syn match       rebolSpecialCharacter contained "\^[^[:space:][]"
syn match       rebolSpecialCharacter contained "%\d\+"


" Operators
" Math operators
" Binary operators

" if '<' was a keyword </tag> wouldn't be recognized
syntax match rebolKW "<"
" Tags
syn region      rebolTag       oneline start=+<\a+ end=+>+
syn region      rebolTag       oneline start=+</+ end=+>+



" Experiments of mine!
"syn match       rebolFuncStatement  "func\s\["

"""""""""""""""""""""""""""

" Define the default highlighting.
" For version 5.7 and earlier: only when not done already
" For version 5.8 and later: only when an item doesn't have highlighting yet
if version >= 508 || !exists("did_rebol_syntax_inits")
  if version < 508
    let did_rebol_syntax_inits = 1
    command -nargs=+ HiLink hi link <args>
  else
    command -nargs=+ HiLink hi def link <args>
  endif

  HiLink rebolTodo     Todo

  HiLink rebolKW Statement

  HiLink rebolOperator  Operator
  HiLink rebolLogicOperator rebolOperator
  HiLink rebolMathOperator rebolOperator
  HiLink rebolBinaryOperator rebolOperator
  HiLink rebolSpecialCharacter SpecialChar
  HiLink rebolString1  String
  HiLink rebolString2  String

  HiLink rebolNumber   Number
  HiLink rebolInteger  rebolNumber
  HiLink rebolDecimal  rebolNumber
  HiLink rebolTime     rebolNumber
  HiLink rebolDate     rebolNumber
  HiLink rebolMoney    rebolNumber
  HiLink rebolBinary   rebolNumber
  HiLink rebolEmail    String
  HiLink rebolFile     String
  HiLink rebolURL      String
  HiLink rebolIssue    rebolNumber
  HiLink rebolTuple    rebolNumber
  HiLink rebolFloat    Float
  HiLink rebolBoolean  Boolean
  HiLink rebolTag      String


  HiLink rebolComment  Comment

  HiLink rebolWord      Identifier

  HiLink rebolDelimiter Delimiter

  delcommand HiLink
endif


" GENERATED BY MAKE-WORD-LIST.REB
syntax keyword rebolKW != !==
syntax keyword rebolKW $
syntax keyword rebolKW %%
syntax keyword rebolKW * ** *parse-url
syntax keyword rebolKW +
syntax keyword rebolKW - -- -> ->- -slash-1-
syntax keyword rebolKW <- <= <> <|
syntax keyword rebolKW = =< == === => =?
syntax keyword rebolKW > >- >-- >=
syntax keyword rebolKW ??
syntax keyword rebolKW @
syntax keyword rebolKW ^
syntax keyword rebolKW about abs absolute acos action! action? adapt adapt* add add-let-binding add-use-object adjust-url-for-raw aes-key aes-stream alert-close-notify aliases? all alpha alphanum also alter an and and+ and-not+ and? any any-array! any-array? any-block! any-branch! any-branch? any-context! any-context? any-get-value! any-get-value? any-group! any-inert? any-meta-value! any-meta-value? any-number! any-number? any-path! any-path? any-plain-value! any-plain-value? any-scalar! any-scalar? any-sequence! any-sequence? any-series! any-series? any-set-value! any-set-value? any-string! any-string? any-the-value! any-the-value? any-tuple! any-value! any-word! any-word? api-transient append application-data applique apply aqua arccosine arcsine arctangent argv-block-to-command* array as as-pair as-text ascii? asin ask assert at atan attempt augment augment*
syntax keyword rebolKW back backslash backspace backtrace backtrace* bad-word! bad-word? base-color beige binary! binary? bind binding-of bitset! bitset? bitwise-and bitwise-and-not bitwise-not bitwise-or bitwise-xor black blackhole blackhole! blank blank! blank? block! block? blockify blue body-of boot-banner boot-print both? bound? break breakpoint breakpoint* brick brown browse browse*
syntax keyword rebolKW BS
syntax keyword rebolKW bugs builtin-extensions bytes bytes-to-version
syntax keyword rebolKW c-break-debug c-debug-break c-debug-break-at c-debug-tick call call* call-internal* callgrind case catch cause-error cd central-file-sig cfor chain chain* change change-cipher-spec change-dir char! char? charset chat check check-response checksum checksum-core cipher-suites clean-path clear client-hello client-key-exchange close coal coffee collect collect* collect-words combinator combinator? combinatorize comma! comma? comment complement compose confirm connect console console! const const? construct contains-newline context continue copy cos cosine count-down count-up
syntax keyword rebolKW CR
syntax keyword rebolKW create crimson crlf2 crlf2bin crlfbin custom! cyan cycle
syntax keyword rebolKW data-descriptor-sig datatype! datatype? date! date? debase debin debug debug-console debug-console-skin decay decimal! decimal? decode decode-bmp decode-gif decode-jpeg decode-png decode-text decode-url decode-utf16be decode-utf16le decrypt-data default default-combinators definitional-return definitional-return-isotope deflate dehex delete delete-dir delimit deline delta-profile delta-time denull description-of detab detab-file devoid dh-compute-secret dh-generate-keypair diagnose did difference digit dir? dirize divide do do* do-branch do-commands do-redirect do-request does doubled-file-slash-error dump dump-to-newline dumps
syntax keyword rebolKW each ecc-generate-keypair ecdh-shared-secret echo eighth either elf-format elide else else? email! email? embedded-file-slash-error emit empty? enbase enbin enblock encap enclose enclose* encode encode-bmp encode-png encode-text encode-utf16be encode-utf16le encoding-of encrypt-data encrypted-handshake-msg end-of-central-sig endable? enfix enfixed enfixed? engroup enhex enline ensure ensure-value entab entrap equal-or-greater? equal-or-lesser? equal? error! error? escape eval eval-all evaluate even? event! event? every exclude exists? exit-rebol exp export export* ext-console-impl extend extract extreme-of
syntax keyword rebolKW factorial fail false fifth file! file-of file-to-local file-type? file? find find-all find-last find-reverse find-script finished first flatten for for-back for-each for-next for-skip forest forever form format fourth frame! frame? free free? freeze func func* function further-combinator fuzz
syntax keyword rebolKW generate generic generic-format get get-block! get-block? get-console-actor-handle get-current-exec get-dir-actor-handle get-dns-actor-handle get-encap get-env get-file-actor-handle get-group! get-group? get-msdos-date get-msdos-time get-os-browsers get-path! get-path? get-tcp-actor-handle get-tuple! get-tuple? get-udp-actor-handle get-word! get-word? getify glom gob! gob? gold grab grab-int gray greater-or-equal? greater? green group! group? groupify gunzip gzip
syntax keyword rebolKW halt handle! handle? head head-of head? heavy help here hex-digits hijack host-script-pre-load http-response-headers
syntax keyword rebolKW idate-to-date identify-bmp? identify-gif? identify-jpeg? identify-png? identify-text? identify-utf16be? identify-utf16le? identity identity-combinator if image! image? immediate! import import* in in-dir index-of index? inert inflate info? inherit-meta inline input input-lines insert integer! integer? intern intern* internal! interrupt intersect invalid-utf8? iso-3166-table iso-639-table issue! issue? iterate iterate-back iterate-next iterate-skip ivory
syntax keyword rebolKW join just
syntax keyword rebolKW khaki
syntax keyword rebolKW lambda last last? latin1? launch leaf length-of length? lesser-or-equal? lesser? let letter
syntax keyword rebolKW LF
syntax keyword rebolKW lib library! library? license light limit-usage line-of linen list-dir list-env lit-path! lit-path? lit-word! lit-word? load load-extension load-header load-value local-file-sig local-to-file locale locals lock-of locked? log-10 log-2 log-e logic! logic? loop loud-print lowercase ls
syntax keyword rebolKW macro magenta main-startup make make-banner make-date-ymdsnz make-dir make-file make-file-block-parts make-file-path-parts make-file-tuple-parts make-http-error make-http-request make-key-block make-master-secret make-port* make-scheme make-state-updater make-time-sn make-tls-error map map! map-each map-gob-offset map? maroon match match-parse match-uparse match? math max maximum maximum-of maybe me meta meta-block! meta-block? meta-group! meta-group? meta-of meta-path! meta-path? meta-tuple! meta-tuple? meta-word! meta-word? metafy meth method min minimum minimum-of mint mkdir mod modified? modify module module! module? modulo mold mold64 money! money? more move multiply must mutable mutable? my
syntax keyword rebolKW n-shot nand? native native-assert navy negate negative? neither? net-log net-trace new-line new-line? newline newlined newpage next ninth no non none noquote nor? not not+ not-equal? nothing? now nul null null?
syntax keyword rebolKW object! object? odd? of off offset-of offset? ok? oldrab olive on oneshot onlify only open open? opt opt-combinator or or+ orange
syntax keyword rebolKW pair! pair? panic papaya parse parse* parse-accept parse-asn parse-command-to-argv* parse-messages parse-protocol parse-reject parse-response parse-write-dialect parse2 parse2? parse? parsify past? path! path? pause pe-format pending pending? percent! percent? perform-read pewter pi pick pick* pink plain pointfree pointfree*
syntax keyword rebolKW POINTS
syntax keyword rebolKW poke poke* port! port? positive? pow power predicate! prf prin print printf probe protect protect* purple put pwd
syntax keyword rebolKW query quit quote quoted! quoted?
syntax keyword rebolKW random random-secure rc4-key rc4-stream read read-body read-char read-line read-lines read-stdin reblue
syntax keyword rebolKW REBOL
syntax keyword rebolKW rebolor recycle red redbol-combinators redescribe redo reduce reduce* reduce-each reeval refinement! refinement? reflect reframer reframer* register-codec* reify rejoin remainder remold remove remove-each rename reorder reorder* repeat repend replace request-dir request-dir* request-file request-file* require-commit requote resolve resume return reverse reword rm round rsa rsa-make-key run-library-collator running?
syntax keyword rebolKW same? save scan-net-header script-pre-load-hook script? second select semiquoted? set set-block! set-block? set-env set-group! set-group? set-location-of-error set-meta set-net set-path! set-path? set-tuple! set-tuple? set-word! set-word? set? setify setlocale seventh shell shift shove shutdown* shutdown_p sienna sign-of sign? silver sin sine single? sixth size-of size? skip skippable? sky slash sleep snow so some-combinator something? sort source
syntax keyword rebolKW SP
syntax keyword rebolKW space spaced spec-of specialize specialize* speed? split split-path square-root start-console startup* stats steal step stop strict-equal? strict-not-equal? struct! struct? subparse subtract suffix-of suffix? summarize-obj surprise swap swap-contents switch symbol! symbol? sys system
syntax keyword rebolKW tab tab-complete tag! tag? tail tail-of tail? take tan tangent teal tenth terminate test-librebol text! text!-combinator text? the the-block! the-block? the-group! the-group? the-path! the-path? the-tuple! the-tuple? the-word! the-word? then then? third throw time! time? tls-init tls-read-data to to-1bin to-2bin to-3bin to-4bin to-8bin to-binary to-bitset to-block to-datatype to-date to-decimal to-email to-error to-event to-file to-function to-get-path to-get-word to-gob to-group to-hex to-ilong to-image to-integer to-ishort to-issue to-lit-path to-lit-word to-logic to-long to-map to-module to-money to-msdos-date to-msdos-time to-object to-pair to-path to-path-file to-percent to-port to-refinement to-relative-file to-set-path to-set-word to-tag to-text to-time to-tuple to-typeset to-url to-vector to-word trace trailing-bytes-for-utf8 transcode trap trim true try tuple! tuple? tweak type-of typecheck-internal? typechecker typeset! typeset?
syntax keyword rebolKW unbind undirize union unique unless unload-extension unmeta unpack unprotect unquote unreachable unset unset? unspaced until unwind unzip uparse uparse* uparse2 uparse2* uparse2? uparse? update-read-state update-write-state upgrade uppercase upshot url! url? usage use using
syntax keyword rebolKW value? values-of varargs! varargs? variadic? vector! vector? verify version-to-bytes violet void
syntax keyword rebolKW wait wait* was water what what-dir wheat while white why without word! word? words-of wrap write write-enlined write-stdout
syntax keyword rebolKW xor xor+
syntax keyword rebolKW yello yellow yes
syntax keyword rebolKW zdeflate zero zero? zinflate zip zip-entry
syntax match rebolKW "|>"
syntax match rebolKW "||"
syntax match rebolKW "|||"
syntax keyword rebolKW ~
let b:current_syntax = "rebol"
